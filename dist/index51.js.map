{"version":3,"file":"index51.js","sources":["../node_modules/date-fns/_lib/format/longFormatters.js"],"sourcesContent":["const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n"],"names":["dateLongFormatter","pattern","formatLong","timeLongFormatter","dateTimeLongFormatter","matchResult","datePattern","timePattern","dateTimeFormat","longFormatters"],"mappings":"AAAA,MAAMA,IAAoB,CAACC,GAASC,MAAe;AACjD,UAAQD,GAAO;AAAA,IACb,KAAK;AACH,aAAOC,EAAW,KAAK,EAAE,OAAO,QAAS,CAAA;AAAA,IAC3C,KAAK;AACH,aAAOA,EAAW,KAAK,EAAE,OAAO,SAAU,CAAA;AAAA,IAC5C,KAAK;AACH,aAAOA,EAAW,KAAK,EAAE,OAAO,OAAQ,CAAA;AAAA,IAC1C,KAAK;AAAA,IACL;AACE,aAAOA,EAAW,KAAK,EAAE,OAAO,OAAQ,CAAA;AAAA,EAC3C;AACH,GAEMC,IAAoB,CAACF,GAASC,MAAe;AACjD,UAAQD,GAAO;AAAA,IACb,KAAK;AACH,aAAOC,EAAW,KAAK,EAAE,OAAO,QAAS,CAAA;AAAA,IAC3C,KAAK;AACH,aAAOA,EAAW,KAAK,EAAE,OAAO,SAAU,CAAA;AAAA,IAC5C,KAAK;AACH,aAAOA,EAAW,KAAK,EAAE,OAAO,OAAQ,CAAA;AAAA,IAC1C,KAAK;AAAA,IACL;AACE,aAAOA,EAAW,KAAK,EAAE,OAAO,OAAQ,CAAA;AAAA,EAC3C;AACH,GAEME,IAAwB,CAACH,GAASC,MAAe;AACrD,QAAMG,IAAcJ,EAAQ,MAAM,WAAW,KAAK,CAAA,GAC5CK,IAAcD,EAAY,CAAC,GAC3BE,IAAcF,EAAY,CAAC;AAEjC,MAAI,CAACE;AACH,WAAOP,EAAkBC,GAASC,CAAU;AAG9C,MAAIM;AAEJ,UAAQF,GAAW;AAAA,IACjB,KAAK;AACH,MAAAE,IAAiBN,EAAW,SAAS,EAAE,OAAO,QAAS,CAAA;AACvD;AAAA,IACF,KAAK;AACH,MAAAM,IAAiBN,EAAW,SAAS,EAAE,OAAO,SAAU,CAAA;AACxD;AAAA,IACF,KAAK;AACH,MAAAM,IAAiBN,EAAW,SAAS,EAAE,OAAO,OAAQ,CAAA;AACtD;AAAA,IACF,KAAK;AAAA,IACL;AACE,MAAAM,IAAiBN,EAAW,SAAS,EAAE,OAAO,OAAQ,CAAA;AACtD;AAAA,EACH;AAED,SAAOM,EACJ,QAAQ,YAAYR,EAAkBM,GAAaJ,CAAU,CAAC,EAC9D,QAAQ,YAAYC,EAAkBI,GAAaL,CAAU,CAAC;AACnE,GAEaO,IAAiB;AAAA,EAC5B,GAAGN;AAAA,EACHC;AACF;","x_google_ignoreList":[0]}