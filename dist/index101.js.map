{"version":3,"file":"index101.js","sources":["../node_modules/date-fns/parse/_lib/parsers/ISOTimezoneWithZParser.js"],"sourcesContent":["import { constructFrom } from \"../../../constructFrom.js\";\nimport { getTimezoneOffsetInMilliseconds } from \"../../../_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { timezonePatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseTimezonePattern } from \"../utils.js\";\n\n// Timezone (ISO-8601. +00:00 is `'Z'`)\nexport class ISOTimezoneWithZParser extends Parser {\n  priority = 10;\n\n  parse(dateString, token) {\n    switch (token) {\n      case \"X\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalMinutes,\n          dateString,\n        );\n      case \"XX\":\n        return parseTimezonePattern(timezonePatterns.basic, dateString);\n      case \"XXXX\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalSeconds,\n          dateString,\n        );\n      case \"XXXXX\":\n        return parseTimezonePattern(\n          timezonePatterns.extendedOptionalSeconds,\n          dateString,\n        );\n      case \"XXX\":\n      default:\n        return parseTimezonePattern(timezonePatterns.extended, dateString);\n    }\n  }\n\n  set(date, flags, value) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(\n      date,\n      date.getTime() - getTimezoneOffsetInMilliseconds(date) - value,\n    );\n  }\n\n  incompatibleTokens = [\"t\", \"T\", \"x\"];\n}\n"],"names":["ISOTimezoneWithZParser","Parser","__publicField","dateString","token","parseTimezonePattern","timezonePatterns","date","flags","value","constructFrom","getTimezoneOffsetInMilliseconds"],"mappings":";;;;;;;;AAQO,MAAMA,UAA+BC,EAAO;AAAA,EAA5C;AAAA;AACL,IAAAC,EAAA,kBAAW;AAmCX,IAAAA,EAAA,4BAAqB,CAAC,KAAK,KAAK,GAAG;AAAA;AAAA,EAjCnC,MAAMC,GAAYC,GAAO;AACvB,YAAQA,GAAK;AAAA,MACX,KAAK;AACH,eAAOC;AAAA,UACLC,EAAiB;AAAA,UACjBH;AAAA,QACV;AAAA,MACM,KAAK;AACH,eAAOE,EAAqBC,EAAiB,OAAOH,CAAU;AAAA,MAChE,KAAK;AACH,eAAOE;AAAA,UACLC,EAAiB;AAAA,UACjBH;AAAA,QACV;AAAA,MACM,KAAK;AACH,eAAOE;AAAA,UACLC,EAAiB;AAAA,UACjBH;AAAA,QACV;AAAA,MACM,KAAK;AAAA,MACL;AACE,eAAOE,EAAqBC,EAAiB,UAAUH,CAAU;AAAA,IACpE;AAAA,EACF;AAAA,EAED,IAAII,GAAMC,GAAOC,GAAO;AACtB,WAAID,EAAM,iBAAuBD,IAC1BG;AAAA,MACLH;AAAA,MACAA,EAAK,QAAS,IAAGI,EAAgCJ,CAAI,IAAIE;AAAA,IAC/D;AAAA,EACG;AAGH;","x_google_ignoreList":[0]}