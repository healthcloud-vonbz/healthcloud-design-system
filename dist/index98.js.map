{"version":3,"file":"index98.js","sources":["../node_modules/date-fns/parse/_lib/parsers/MinuteParser.js"],"sourcesContent":["import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class MinuteParser extends Parser {\n  priority = 60;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"m\":\n        return parseNumericPattern(numericPatterns.minute, dateString);\n      case \"mo\":\n        return match.ordinalNumber(dateString, { unit: \"minute\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 59;\n  }\n\n  set(date, _flags, value) {\n    date.setMinutes(value, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n"],"names":["MinuteParser","Parser","__publicField","dateString","token","match","parseNumericPattern","numericPatterns","parseNDigits","_date","value","date","_flags"],"mappings":";;;;;;AAKO,MAAMA,UAAqBC,EAAO;AAAA,EAAlC;AAAA;AACL,IAAAC,EAAA,kBAAW;AAsBX,IAAAA,EAAA,4BAAqB,CAAC,KAAK,GAAG;AAAA;AAAA,EApB9B,MAAMC,GAAYC,GAAOC,GAAO;AAC9B,YAAQD,GAAK;AAAA,MACX,KAAK;AACH,eAAOE,EAAoBC,EAAgB,QAAQJ,CAAU;AAAA,MAC/D,KAAK;AACH,eAAOE,EAAM,cAAcF,GAAY,EAAE,MAAM,SAAQ,CAAE;AAAA,MAC3D;AACE,eAAOK,EAAaJ,EAAM,QAAQD,CAAU;AAAA,IAC/C;AAAA,EACF;AAAA,EAED,SAASM,GAAOC,GAAO;AACrB,WAAOA,KAAS,KAAKA,KAAS;AAAA,EAC/B;AAAA,EAED,IAAIC,GAAMC,GAAQF,GAAO;AACvB,WAAAC,EAAK,WAAWD,GAAO,GAAG,CAAC,GACpBC;AAAA,EACR;AAGH;","x_google_ignoreList":[0]}