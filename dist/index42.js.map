{"version":3,"file":"index42.js","sources":["../node_modules/date-fns/getISOWeek.js"],"sourcesContent":["import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeek} function options.\n */\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n"],"names":["getISOWeek","date","options","_date","toDate","diff","startOfISOWeek","startOfISOWeekYear","millisecondsInWeek"],"mappings":";;;;AA6BO,SAASA,EAAWC,GAAMC,GAAS;AACxC,QAAMC,IAAQC,EAAOH,GAAMC,KAAA,gBAAAA,EAAS,EAAE,GAChCG,IAAO,CAACC,EAAeH,CAAK,IAAI,CAACI,EAAmBJ,CAAK;AAK/D,SAAO,KAAK,MAAME,IAAOG,CAAkB,IAAI;AACjD;","x_google_ignoreList":[0]}