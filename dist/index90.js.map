{"version":3,"file":"index90.js","sources":["../node_modules/date-fns/parse/_lib/parsers/ISODayParser.js"],"sourcesContent":["import { setISODay } from \"../../../setISODay.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { mapValue, parseNDigits } from \"../utils.js\";\n\n// ISO day of week\nexport class ISODayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => {\n      if (value === 0) {\n        return 7;\n      }\n      return value;\n    };\n\n    switch (token) {\n      // 2\n      case \"i\":\n      case \"ii\": // 02\n        return parseNDigits(token.length, dateString);\n      // 2nd\n      case \"io\":\n        return match.ordinalNumber(dateString, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"short\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n      // T\n      case \"iiiii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          }),\n          valueCallback,\n        );\n      // Tu\n      case \"iiiiii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"short\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n      // Tuesday\n      case \"iiii\":\n      default:\n        return mapValue(\n          match.day(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"abbreviated\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"short\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 7;\n  }\n\n  set(date, _flags, value) {\n    date = setISODay(date, value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n"],"names":["ISODayParser","Parser","__publicField","dateString","token","match","valueCallback","value","parseNDigits","mapValue","_date","date","_flags","setISODay"],"mappings":";;;;;;AAMO,MAAMA,UAAqBC,EAAO;AAAA,EAAlC;AAAA;AACL,IAAAC,EAAA,kBAAW;AA4FX,IAAAA,EAAA,4BAAqB;AAAA,MACnB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAAA;AAAA,EA1GE,MAAMC,GAAYC,GAAOC,GAAO;AAC9B,UAAMC,IAAgB,CAACC,MACjBA,MAAU,IACL,IAEFA;AAGT,YAAQH,GAAK;AAAA,MAEX,KAAK;AAAA,MACL,KAAK;AACH,eAAOI,EAAaJ,EAAM,QAAQD,CAAU;AAAA,MAE9C,KAAK;AACH,eAAOE,EAAM,cAAcF,GAAY,EAAE,MAAM,MAAK,CAAE;AAAA,MAExD,KAAK;AACH,eAAOM;AAAA,UACLJ,EAAM,IAAIF,GAAY;AAAA,YACpB,OAAO;AAAA,YACP,SAAS;AAAA,UACrB,CAAW,KACCE,EAAM,IAAIF,GAAY;AAAA,YACpB,OAAO;AAAA,YACP,SAAS;AAAA,UACvB,CAAa,KACDE,EAAM,IAAIF,GAAY;AAAA,YACpB,OAAO;AAAA,YACP,SAAS;AAAA,UACvB,CAAa;AAAA,UACHG;AAAA,QACV;AAAA,MAEM,KAAK;AACH,eAAOG;AAAA,UACLJ,EAAM,IAAIF,GAAY;AAAA,YACpB,OAAO;AAAA,YACP,SAAS;AAAA,UACrB,CAAW;AAAA,UACDG;AAAA,QACV;AAAA,MAEM,KAAK;AACH,eAAOG;AAAA,UACLJ,EAAM,IAAIF,GAAY;AAAA,YACpB,OAAO;AAAA,YACP,SAAS;AAAA,UACrB,CAAW,KACCE,EAAM,IAAIF,GAAY;AAAA,YACpB,OAAO;AAAA,YACP,SAAS;AAAA,UACvB,CAAa;AAAA,UACHG;AAAA,QACV;AAAA,MAEM,KAAK;AAAA,MACL;AACE,eAAOG;AAAA,UACLJ,EAAM,IAAIF,GAAY;AAAA,YACpB,OAAO;AAAA,YACP,SAAS;AAAA,UACrB,CAAW,KACCE,EAAM,IAAIF,GAAY;AAAA,YACpB,OAAO;AAAA,YACP,SAAS;AAAA,UACvB,CAAa,KACDE,EAAM,IAAIF,GAAY;AAAA,YACpB,OAAO;AAAA,YACP,SAAS;AAAA,UACvB,CAAa,KACDE,EAAM,IAAIF,GAAY;AAAA,YACpB,OAAO;AAAA,YACP,SAAS;AAAA,UACvB,CAAa;AAAA,UACHG;AAAA,QACV;AAAA,IACK;AAAA,EACF;AAAA,EAED,SAASI,GAAOH,GAAO;AACrB,WAAOA,KAAS,KAAKA,KAAS;AAAA,EAC/B;AAAA,EAED,IAAII,GAAMC,GAAQL,GAAO;AACvB,WAAAI,IAAOE,EAAUF,GAAMJ,CAAK,GAC5BI,EAAK,SAAS,GAAG,GAAG,GAAG,CAAC,GACjBA;AAAA,EACR;AAmBH;","x_google_ignoreList":[0]}