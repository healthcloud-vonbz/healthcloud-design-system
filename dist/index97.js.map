{"version":3,"file":"index97.js","sources":["../node_modules/date-fns/parse/_lib/parsers/Hour1To24Parser.js"],"sourcesContent":["import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class Hour1To24Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"k\":\n        return parseNumericPattern(numericPatterns.hour24h, dateString);\n      case \"ko\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 24;\n  }\n\n  set(date, _flags, value) {\n    const hours = value <= 24 ? value % 24 : value;\n    date.setHours(hours, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"h\", \"H\", \"K\", \"t\", \"T\"];\n}\n"],"names":["Hour1To24Parser","Parser","__publicField","dateString","token","match","parseNumericPattern","numericPatterns","parseNDigits","_date","value","date","_flags","hours"],"mappings":";;;;;;AAKO,MAAMA,UAAwBC,EAAO;AAAA,EAArC;AAAA;AACL,IAAAC,EAAA,kBAAW;AAuBX,IAAAA,EAAA,4BAAqB,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG;AAAA;AAAA,EArBvD,MAAMC,GAAYC,GAAOC,GAAO;AAC9B,YAAQD,GAAK;AAAA,MACX,KAAK;AACH,eAAOE,EAAoBC,EAAgB,SAASJ,CAAU;AAAA,MAChE,KAAK;AACH,eAAOE,EAAM,cAAcF,GAAY,EAAE,MAAM,OAAM,CAAE;AAAA,MACzD;AACE,eAAOK,EAAaJ,EAAM,QAAQD,CAAU;AAAA,IAC/C;AAAA,EACF;AAAA,EAED,SAASM,GAAOC,GAAO;AACrB,WAAOA,KAAS,KAAKA,KAAS;AAAA,EAC/B;AAAA,EAED,IAAIC,GAAMC,GAAQF,GAAO;AACvB,UAAMG,IAAQH,KAAS,KAAKA,IAAQ,KAAKA;AACzC,WAAAC,EAAK,SAASE,GAAO,GAAG,GAAG,CAAC,GACrBF;AAAA,EACR;AAGH;","x_google_ignoreList":[0]}