{"version":3,"file":"index86.js","sources":["../node_modules/date-fns/parse/_lib/parsers/DayOfYearParser.js"],"sourcesContent":["import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport {\n  isLeapYearIndex,\n  parseNDigits,\n  parseNumericPattern,\n} from \"../utils.js\";\n\nexport class DayOfYearParser extends Parser {\n  priority = 90;\n\n  subpriority = 1;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"D\":\n      case \"DD\":\n        return parseNumericPattern(numericPatterns.dayOfYear, dateString);\n      case \"Do\":\n        return match.ordinalNumber(dateString, { unit: \"date\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(date, value) {\n    const year = date.getFullYear();\n    const isLeapYear = isLeapYearIndex(year);\n    if (isLeapYear) {\n      return value >= 1 && value <= 366;\n    } else {\n      return value >= 1 && value <= 365;\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(0, value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"E\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n"],"names":["DayOfYearParser","Parser","__publicField","dateString","token","match","parseNumericPattern","numericPatterns","parseNDigits","date","value","year","isLeapYearIndex","_flags"],"mappings":";;;;;;AASO,MAAMA,UAAwBC,EAAO;AAAA,EAArC;AAAA;AACL,IAAAC,EAAA,kBAAW;AAEX,IAAAA,EAAA,qBAAc;AA8Bd,IAAAA,EAAA,4BAAqB;AAAA,MACnB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAAA;AAAA,EA5CE,MAAMC,GAAYC,GAAOC,GAAO;AAC9B,YAAQD,GAAK;AAAA,MACX,KAAK;AAAA,MACL,KAAK;AACH,eAAOE,EAAoBC,EAAgB,WAAWJ,CAAU;AAAA,MAClE,KAAK;AACH,eAAOE,EAAM,cAAcF,GAAY,EAAE,MAAM,OAAM,CAAE;AAAA,MACzD;AACE,eAAOK,EAAaJ,EAAM,QAAQD,CAAU;AAAA,IAC/C;AAAA,EACF;AAAA,EAED,SAASM,GAAMC,GAAO;AACpB,UAAMC,IAAOF,EAAK;AAElB,WADmBG,EAAgBD,CAAI,IAE9BD,KAAS,KAAKA,KAAS,MAEvBA,KAAS,KAAKA,KAAS;AAAA,EAEjC;AAAA,EAED,IAAID,GAAMI,GAAQH,GAAO;AACvB,WAAAD,EAAK,SAAS,GAAGC,CAAK,GACtBD,EAAK,SAAS,GAAG,GAAG,GAAG,CAAC,GACjBA;AAAA,EACR;AAmBH;","x_google_ignoreList":[0]}