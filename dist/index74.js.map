{"version":3,"file":"index74.js","sources":["../node_modules/date-fns/parse/_lib/parsers/EraParser.js"],"sourcesContent":["import { Parser } from \"../Parser.js\";\n\nexport class EraParser extends Parser {\n  priority = 140;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return (\n          match.era(dateString, { width: \"abbreviated\" }) ||\n          match.era(dateString, { width: \"narrow\" })\n        );\n\n      // A, B\n      case \"GGGGG\":\n        return match.era(dateString, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return (\n          match.era(dateString, { width: \"wide\" }) ||\n          match.era(dateString, { width: \"abbreviated\" }) ||\n          match.era(dateString, { width: \"narrow\" })\n        );\n    }\n  }\n\n  set(date, flags, value) {\n    flags.era = value;\n    date.setFullYear(value, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"R\", \"u\", \"t\", \"T\"];\n}\n"],"names":["EraParser","Parser","__publicField","dateString","token","match","date","flags","value"],"mappings":";;;;AAEO,MAAMA,UAAkBC,EAAO;AAAA,EAA/B;AAAA;AACL,IAAAC,EAAA,kBAAW;AAkCX,IAAAA,EAAA,4BAAqB,CAAC,KAAK,KAAK,KAAK,GAAG;AAAA;AAAA,EAhCxC,MAAMC,GAAYC,GAAOC,GAAO;AAC9B,YAAQD,GAAK;AAAA,MAEX,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACH,eACEC,EAAM,IAAIF,GAAY,EAAE,OAAO,cAAa,CAAE,KAC9CE,EAAM,IAAIF,GAAY,EAAE,OAAO,SAAQ,CAAE;AAAA,MAI7C,KAAK;AACH,eAAOE,EAAM,IAAIF,GAAY,EAAE,OAAO,SAAQ,CAAE;AAAA,MAElD,KAAK;AAAA,MACL;AACE,eACEE,EAAM,IAAIF,GAAY,EAAE,OAAO,OAAM,CAAE,KACvCE,EAAM,IAAIF,GAAY,EAAE,OAAO,cAAa,CAAE,KAC9CE,EAAM,IAAIF,GAAY,EAAE,OAAO,SAAQ,CAAE;AAAA,IAE9C;AAAA,EACF;AAAA,EAED,IAAIG,GAAMC,GAAOC,GAAO;AACtB,WAAAD,EAAM,MAAMC,GACZF,EAAK,YAAYE,GAAO,GAAG,CAAC,GAC5BF,EAAK,SAAS,GAAG,GAAG,GAAG,CAAC,GACjBA;AAAA,EACR;AAGH;","x_google_ignoreList":[0]}